/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};

/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {

/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;

/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};

/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);

/******/ 		// Flag the module as loaded
/******/ 		module.l = true;

/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}


/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;

/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;

/******/ 	// identity function for calling harmory imports with the correct context
/******/ 	__webpack_require__.i = function(value) { return value; };

/******/ 	// define getter function for harmory exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		Object.defineProperty(exports, name, {
/******/ 			configurable: false,
/******/ 			enumerable: true,
/******/ 			get: getter
/******/ 		});
/******/ 	};

/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};

/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };

/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";

/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 1);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
eval("/* harmony export (binding) */ __webpack_require__.d(exports, \"a\", function() { return setAjaxEventHandlers; });\n/********************** Module Ajax: Tasks Index Page ********************/\r\n\"use strict\"; // see strict mode\r\n\r\nvar url = \"/tasks\";\r\n// var count = 0; // debug: controls the number of deleteTask() calls;\r\n\r\n// Display modal form for editing Task\r\nfunction openModalEdit(obj) {\r\n\t\r\n\tvar task_id = $(obj).val()\r\n\tvar ajax_url = url + '/' + task_id;\r\n\t\r\n\t$.get(ajax_url, function (data) {\r\n\t\t// console.log(data);\r\n\t\t$('#task_id').val(data.id);\r\n\t\t$('#task').val(data.title);\r\n\t\t$('#description').val(data.description);\r\n\t\t$('#btn-save').val(\"update\");\r\n\r\n\t\t$('#myModal').modal('show');\r\n\t}); \r\n}\r\n\r\n// Display modal form for creating new Task\r\nfunction openModalCreate() {\r\n\t$('#btn-save').val(\"add\");\r\n\t$('#frmTasks').trigger(\"reset\");\r\n\t$('#myModal').modal('show');\t\t\r\n}\r\n\r\n// Add CSRF token to ajax call header\r\nfunction ajaxSetup() {\r\n\t$.ajaxSetup({\r\n\t\theaders: {\r\n\t\t\t'X-CSRF-TOKEN': $('meta[name=\"_token\"]').attr('content')\r\n\t\t}\r\n\t});\t\r\n}\r\n\r\n// Remove task from the list on html page\r\nfunction removeTask(task_id) {\r\n\t$(\"#task\" + task_id).remove();\r\n}\r\n\t\r\n// Delete task from database (ajax call) and [in case of success] remove it from list on html page\r\nfunction deleteTask(obj) {\r\n\t//console.log('Delete: ' + count++);\r\n\t\r\n\tvar task_id = $(obj).val();\r\n\tvar ajax_url = url + '/' + task_id;\r\n\t\r\n\tajaxSetup();\t\t\t\r\n\r\n\t$.ajax({\r\n\t\ttype: \"DELETE\",\r\n\t\turl: ajax_url,\r\n\r\n\t\tsuccess: function (data) {\r\n\t\t\tremoveTask(task_id);\r\n\t\t},\r\n\t\t\r\n\t\terror: function (data) {\r\n\t\t\tconsole.log('Error:', data);\r\n\t\t}\r\n\t});\t\t\r\n}\r\n\r\n// Create new task object \r\nfunction createTask(data) {\r\n\t\r\n\t// construct <tr> and populate it with task data\r\n\tvar task = $('<tr id=\"task' + data.id +'\"></tr>');\r\n\ttask.append('<td>' + data.id + '</td>');\r\n\ttask.append('<td>' + data.title + '</td>');\r\n\ttask.append('<td>' + data.description + '</td>');\r\n\ttask.append('<td>' + data.created_at + '</td>');\r\n\t\r\n\t// create Edit <button>\r\n\tvar td_edit = $('<td></td>');\r\n\tvar btn_edit = $('<button class=\"btn btn-warning btn-xs open-modal\" value=\"' + data.id + '\">Edit</button></td>');\r\n\t\t\t\r\n\t/* Investigate event setting/handling via jQuery .on() finction */\r\n\t// Set event handler for edit button\r\n\t// $(\"#tasks-list\").on( \"click\", \".open-modal[value=\" + data.id + \"]\", function() {\r\n\t//\topenModalEdit(this);\t\t\t\r\n\t//});\r\n\t\r\n\t// add Edit <button> to the task\r\n\ttd_edit.append(btn_edit);\r\n\ttask.append(td_edit);\r\n\t\r\n\t// create Delete <button>\r\n\tvar td_delete = $('<td></td>');\r\n\tvar btn_delete = $('<button class=\"btn btn-danger btn-xs delete-task\" value=\"' + data.id + '\">Delete</button>');\r\n\t\r\n\t// Set event handler for delete button\r\n\t//$( \"#tasks-list\").on( \"click\", \".delete-task[value=\" + data.id + \"]\", function() {\r\n\t//\tdeleteTask(this);\r\n\t//});\t\t\r\n\t\r\n\t// add Delete <button> to the task\r\n\ttd_delete.append(btn_delete);\r\n\ttask.append(td_delete);\r\n\r\n\treturn task;\r\n}\t\r\n\r\n// Populate task [new or edited] data with Modal form inputs and save it\r\nfunction saveTask() {\r\n\t\r\n\tajaxSetup();\r\n\r\n\t// fill task data\r\n\tvar task_id = $('#task_id').val();\r\n\t\r\n\tvar formData = {\r\n\t\ttitle: $('#task').val(),\r\n\t\tdescription: $('#description').val(),\r\n\t};\r\n\t\r\n\t// used to determine the http verb to use [add=POST], [update=PUT]\r\n\tvar state = $('#btn-save').val();\r\n\r\n\t// params for ajax POST request to create new Task\r\n\tvar type = \"POST\"; \r\n\tvar ajax_url = url;\r\n\r\n\t// params for ajax PUT request to update existing Task\r\n\tif (state == \"update\"){\r\n\t\ttype = \"PUT\"; \r\n\t\tajax_url += '/' + task_id;\r\n\t}\r\n\r\n\t$.ajax({\r\n\t\ttype:     type,\r\n\t\turl:      ajax_url,\r\n\t\tdata: \t  formData,\r\n\t\tdataType: 'json',\r\n\t\tsuccess:  function (data) {\r\n\t\t\tvar task = createTask(data);\r\n\t\t\t\r\n\t\t\t// if new task created\t\r\n\t\t\tif (state == \"add\"){ \r\n\t\t\t\t$('#tasks-list').append(task);\r\n\r\n\t\t\t// if existing task updated\t\r\n\t\t\t} else { \r\n\t\t\t\t$(\"#task\" + task_id).replaceWith(task);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t// Set Edit <button> handler \r\n\t\t\t$('.open-modal[value=' + data.id + ']').click(function(){\r\n\t\t\t\topenModalEdit(this);\r\n\t\t\t});\r\n\t\t\t\r\n\t\t\t// Set Delete <button> handler\r\n\t\t\t$('.delete-task[value=' + data.id + ']').click(function(){\r\n\t\t\t\tdeleteTask(this);\r\n\t\t\t});\r\n\r\n\t\t\t$('#frmTasks').trigger(\"reset\");\r\n\t\t\t$('#myModal').modal('hide')\r\n\t\t},\r\n\t\t\r\n\t\terror: function (data) {\r\n\t\t\tconsole.log('Error:', data);\r\n\t\t}\r\n\t});\t\t\r\n}\r\n\t\r\n\t\t\r\n// Set Ajax Module event handlers\r\nfunction setAjaxEventHandlers(){\t\r\n\r\n\t// Display modal form for editing Task\r\n\t$('.open-modal').click(function(){\r\n\t\topenModalEdit(this);\r\n\t});\r\n\r\n\t// Display modal form for creating new Task\r\n\t$('#btn-add').click(function(){\r\n\t\topenModalCreate();\r\n\t});\r\n\r\n\t// Delete task from database (ajax call) and remove it from list (html)\r\n\t$('.delete-task').click(function(){\r\n\t\tdeleteTask(this);\r\n\t});\r\n\r\n\t// Create new / update existing Task\r\n\t$(\"#btn-save\").click(function (e) {\r\n\t\te.preventDefault();\r\n\t\tsaveTask();\r\n\t});\r\n}\r\n\r\n\r\n\t//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ },
/* 1 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
eval("/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__ajax_js__ = __webpack_require__(0);\n// @project Tasks \r\n\r\n\r\n\r\n// Application initiation: setting all required handlers\r\nfunction setEventHandlers() {\t\r\n\r\n\t__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__ajax_js__[\"a\" /* setAjaxEventHandlers */])();\r\n\t\r\n}\r\n\r\n// \r\n$(\"document\").ready(function() {\t\r\n\tsetEventHandlers();\r\n});//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMS5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy9yZXNvdXJjZXMvYXNzZXRzL2pzL3Rhc2tzLmpzPzQwYzMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQHByb2plY3QgVGFza3MgXHJcblxyXG5pbXBvcnQgeyBzZXRBamF4RXZlbnRIYW5kbGVycyB9IGZyb20gJy4vYWpheC5qcyc7XHJcblxyXG4vLyBBcHBsaWNhdGlvbiBpbml0aWF0aW9uOiBzZXR0aW5nIGFsbCByZXF1aXJlZCBoYW5kbGVyc1xyXG5mdW5jdGlvbiBzZXRFdmVudEhhbmRsZXJzKCkge1x0XHJcblxyXG5cdHNldEFqYXhFdmVudEhhbmRsZXJzKCk7XHJcblx0XHJcbn1cclxuXHJcbi8vIFxyXG4kKFwiZG9jdW1lbnRcIikucmVhZHkoZnVuY3Rpb24oKSB7XHRcclxuXHRzZXRFdmVudEhhbmRsZXJzKCk7XHJcbn0pO1xuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyByZXNvdXJjZXMvYXNzZXRzL2pzL3Rhc2tzLmpzIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7Iiwic291cmNlUm9vdCI6IiJ9");

/***/ }
/******/ ]);